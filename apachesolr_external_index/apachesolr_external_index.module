<?php
/**
 * @file
 * Apache Solr external index module - example module for using external data.
 */

define('APACHESOLR_EXTERNAL_INDEX_ID', 'ext_1');

/**
 * implements hook_apachesolr_search_page_alter().
 */
function apachesolr_external_index_apachesolr_search_page_alter(&$build, $search_page) {
  // Look for a hard-coded env_id
  if ($search_page['env_id'] == APACHESOLR_EXTERNAL_INDEX_ID &&
      isset($build['search_results']['#theme']) &&
      $build['search_results']['#theme'] == 'search_results') {
    $build['search_results']['#theme'] = 'apachesolr_external_index_results';
  }
}

/**
 * implements hook_theme().
 */
function apachesolr_external_index_theme() {
  return array(
    'apachesolr_external_index_results' => array(
      'variables' => array('results' => NULL),
    ),
  );
}

function theme_apachesolr_external_index_results($variables) {
  $rows = array();
  $header = array('Provider', 'Type', 'ID', 'Species', 'Description');
  foreach ($variables['results'] as $doc) {
    $row = array();
    $row[] = $doc['fields']['provider'];
    $row[] = $doc['fields']['obj_type'];
    $row[] = l($doc['fields']['id'], $doc['fields']['src_url']);
    $row[] = $doc['fields']['species'];
    $row[] = $doc['fields']['obj_desc'];
    $rows[] = $row;
  }
  return theme('table', array('header' => $header, 'rows' => $rows)).
    theme('pager');
}

/**
 * implements hook_apachesolr_query_alter().
 */
function apachesolr_external_index_apachesolr_query_alter($query) {
  if ($query->solr('getId') == APACHESOLR_EXTERNAL_INDEX_ID) {
    // Get stored fields.
    $query->replaceParam('fl',
                         array('id', 'obj_desc', 'obj_type',
                               'provider', 'species', 'src_url',
                               'timestamp', 'score'));
    $query->replaceParam('hl', FALSE);
  }
}

/**
 * implements hook_apachesolr_search_result_alter().
 */
function apachesolr_external_index_apachesolr_search_result_alter($doc, $extra, $query) {
  if ($query->solr('getId') == APACHESOLR_EXTERNAL_INDEX_ID) {
    // apachesolr_search module expects entity_type to be set.
    $doc->entity_type = 'gene';
    $doc->path = $doc->src_url;
  }
}

/**
 * Implements an environment-specific facet callback called from apachesolr_facetapi_facet_info()
 *
 * Returns the same values as used by hook_facetapi_facet_info().  We
 * could have used that hook indead, but then our facets would be added
 * to rather than replacing the defaults defined by the apachesolr module.
 *
 * @param array $searcher_info
 *   The definition of the searcher that facets are being collected for.
 *
 * @return array
 *   An associative array keyed by unique name of the facet.
 */
function apachesolr_external_index_facet_callback($searcher_info) {
  $facets = array();

  $facets['obj_type'] = array(
    'label' => t('Resource category'),
    'description' => t('Filter by resource category.'),
    'field' => 'obj_type',
    'facet mincount allowed' => TRUE,
  );
  
  $facets['species'] = array(
    'label' => t('Species'),
    'description' => t('Filter by species.'),
    'field' => 'species',
    'facet mincount allowed' => TRUE,
  );

  $facets['provider'] = array(
    'label' => t('Provider'),
    'description' => t('Filter by provider.'),
    'field' => 'provider',
    'facet mincount allowed' => TRUE,
  );
  
  return $facets;
}

/**
 * Implementation of hook_ctools_plugin_api().
 *
 * Tell CTools that we support the default_mymodule_presets API.
 */
function apachesolr_external_index_ctools_plugin_api($module, $api) {
  if ($module == 'apachesolr' && $api == 'apachesolr_environments') {
    return array('version' => 1);
  }
  if ($module == 'apachesolr_search' && $api == 'apachesolr_search_defaults') {
    return array('version' => 3);
  }
  if ($module == 'facetapi' && $api == 'facetapi_defaults') {
    return array('version' => 1);
  }
}

